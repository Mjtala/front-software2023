{"ast":null,"code":"var _jsxFileName = \"/Users/prueba/Documents/repos/front-software2023/src/components/usersListsFromAPI.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UsersListsFromAPI() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const fetchData = async () => {\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n    const data = await response.json();\n    setUsers(data);\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"users-heading\",\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), users.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        \"data-testid\": \"username-list\",\n        children: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(UsersListsFromAPI, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = UsersListsFromAPI;\nexport default UsersListsFromAPI;\nvar _c;\n$RefreshReg$(_c, \"UsersListsFromAPI\");","map":{"version":3,"names":["React","useEffect","useState","UsersListsFromAPI","users","setUsers","fetchData","response","fetch","data","json","length","map","user","name","id"],"sources":["/Users/prueba/Documents/repos/front-software2023/src/components/usersListsFromAPI.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction UsersListsFromAPI() {\n  const [users, setUsers] = useState([]);\n\n  const fetchData = async () => {\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n\n    const data = await response.json();\n\n    setUsers(data);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <section>\n      <h1 id=\"users-heading\">Users</h1>\n      {users.length > 0 && (\n        <ul>\n          {users.map((user) => (\n            <li key={user.id} data-testid=\"username-list\">\n              {user.name}\n            </li>\n          ))}\n        </ul>\n      )}\n    </section>\n  );\n}\n\nexport default UsersListsFromAPI;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAEnD,SAASC,iBAAiB,GAAG;EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMI,SAAS,GAAG,YAAY;IAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;IAE1E,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAElCL,QAAQ,CAACI,IAAI,CAAC;EAChB,CAAC;EAEDR,SAAS,CAAC,MAAM;IACdK,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,wBACE;MAAI,EAAE,EAAC,eAAe;MAAA,UAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,EAChCF,KAAK,CAACO,MAAM,GAAG,CAAC,iBACf;MAAA,UACGP,KAAK,CAACQ,GAAG,CAAEC,IAAI,iBACd;QAAkB,eAAY,eAAe;QAAA,UAC1CA,IAAI,CAACC;MAAI,GADHD,IAAI,CAACE,EAAE;QAAA;QAAA;QAAA;MAAA,QAGjB;IAAC;MAAA;MAAA;MAAA;IAAA,QAEL;EAAA;IAAA;IAAA;IAAA;EAAA,QACO;AAEd;AAAC,GA7BQZ,iBAAiB;AAAA,KAAjBA,iBAAiB;AA+B1B,eAAeA,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}